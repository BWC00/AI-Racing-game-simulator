# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  win: circleci/windows@2.2.0
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build_linux:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
    - image: ubuntu:20.04
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: apt update
      - run: DEBIAN_FRONTEND=noninteractive TZ=Europe/Brussels apt install -y gcc g++ libsfml-dev cmake git
      - run: mkdir -p build
      - run: cd ./build && cmake ..
      - run: cd ./build && make
  build_windows:
    executor:
          name: win/default
          shell: powershell.exe
    steps:
      - checkout
      - run:
          name: make build folder
          command: 'mkdir build'
      - run:
          name: Installing g++
          command: 'choco install mingw'
      - run:
          name: install cmake
          command: 'choco install cmake -y'
      - run:
          name: set path variables and run Cmake
          working_directory: ./build
          command: '$env:Path+="; $Env:ProgramFiles\CMake\bin"; cmake -G "MinGW Makefiles" ..'
      - run:
          name: make
          working_directory: ./build
          command: 'mingw32-make.exe'
      - run:
          name: running
          working_directory: ./build 
          command: './RacingSimulator.exe'




# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - build_linux
      # - build_windows
